{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peppe\\\\OneDrive\\\\Desktop\\\\Mini-Project-4\\\\frontend\\\\src\\\\components\\\\BlogPostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlogPostForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState(''); // Could be linked to a logged-in user\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8000/blogs', {\n        title,\n        body,\n        author\n      });\n      setTitle('');\n      setBody('');\n      alert('Post created successfully');\n    } catch (error) {\n      console.error('Error creating post', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Body\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Author\",\n      value: author,\n      onChange: e => setAuthor(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(BlogPostForm, \"IZ53DJsBv+ycgHsVShrAHXChPSk=\");\n_c = BlogPostForm;\nexport default BlogPostForm;\nvar _c;\n$RefreshReg$(_c, \"BlogPostForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BlogPostForm","_s","title","setTitle","body","setBody","author","setAuthor","handleSubmit","e","preventDefault","post","alert","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/peppe/OneDrive/Desktop/Mini-Project-4/frontend/src/components/BlogPostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction BlogPostForm() {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState(''); // Could be linked to a logged-in user\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:8000/blogs', { title, body, author });\r\n            setTitle('');\r\n            setBody('');\r\n            alert('Post created successfully');\r\n        } catch (error) {\r\n            console.error('Error creating post', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Create a New Post</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <textarea\r\n                placeholder=\"Body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Author\"\r\n                value={author}\r\n                onChange={(e) => setAuthor(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Create Post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default BlogPostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMb,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAE;QAAET,KAAK;QAAEE,IAAI;QAAEE;MAAO,CAAC,CAAC;MACxEH,QAAQ,CAAC,EAAE,CAAC;MACZE,OAAO,CAAC,EAAE,CAAC;MACXO,KAAK,CAAC,2BAA2B,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACId,OAAA;IAAMgB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBACzBjB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAErB,KAAM;MACbsB,QAAQ,EAAGf,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MACIuB,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGf,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrB,OAAA;MACIsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAEjB,MAAO;MACdkB,QAAQ,EAAGf,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEf;AAACnB,EAAA,CAxCQD,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA0CrB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}