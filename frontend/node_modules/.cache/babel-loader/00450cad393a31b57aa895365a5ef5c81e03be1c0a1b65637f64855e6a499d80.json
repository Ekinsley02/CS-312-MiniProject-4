{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peppe\\\\OneDrive\\\\Desktop\\\\Mini-Project-4\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\n// import libaries\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// function to post edit\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList({\n  onEditPost\n}) {\n  _s();\n  // get the posts and state\n  const [posts, setPosts] = useState([]);\n\n  // fetch the posts\n  const fetchPosts = async () => {\n    // try to get the post page\n    try {\n      const response = await axios.get('http://localhost:8000/blogs');\n      setPosts(response.data);\n    }\n\n    // otherwise throw exception\n    catch (error) {\n      console.error('Error fetching posts', error);\n    }\n  };\n  const handleDelete = async postId => {\n    try {\n      await axios.delete(`http://localhost:8000/blogs/${postId}`);\n      setPosts(posts.filter(post => post.id !== postId)); // Update the local state to remove the deleted post\n    } catch (error) {\n      console.error('Error deleting post', error);\n      alert('Failed to delete the post');\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this), \" \", post.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onEditPost(post),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(post.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PostList","onEditPost","_s","posts","setPosts","fetchPosts","response","get","data","error","console","handleDelete","postId","delete","filter","post","id","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","title","body","author","onClick","_c","$RefreshReg$"],"sources":["C:/Users/peppe/OneDrive/Desktop/Mini-Project-4/frontend/src/components/PostList.js"],"sourcesContent":["// import libaries\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// function to post edit\r\nfunction PostList( { onEditPost } ) \r\n    {\r\n    \r\n    // get the posts and state\r\n    const [posts, setPosts] = useState( [] );\r\n    \r\n    // fetch the posts\r\n    const fetchPosts = async () => \r\n        {\r\n        \r\n        // try to get the post page\r\n        try \r\n            {\r\n\r\n            const response = await axios.get( 'http://localhost:8000/blogs' );\r\n            setPosts(response.data);\r\n            } \r\n        \r\n        // otherwise throw exception\r\n        catch( error)\r\n            {\r\n\r\n            console.error( 'Error fetching posts', error );\r\n            }\r\n        };\r\n\r\n    const handleDelete = async (postId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:8000/blogs/${postId}`);\r\n            setPosts(posts.filter(post => post.id !== postId)); // Update the local state to remove the deleted post\r\n        } catch (error) {\r\n            console.error('Error deleting post', error);\r\n            alert('Failed to delete the post');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Blog Posts</h2>\r\n            {posts.map(post => (\r\n                <div key={post.id} className=\"post\">\r\n                    <h3>{post.title}</h3>\r\n                    <p>{post.body}</p>\r\n                    <p><strong>Author:</strong> {post.author}</p>\r\n                    <button onClick={() => onEditPost(post)}>Edit</button>\r\n                    <button onClick={() => handleDelete(post.id)}>Delete</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}